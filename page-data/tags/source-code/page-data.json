{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-tag-query-tsx","path":"/tags/source-code","result":{"data":{"allPost":{"nodes":[{"__typename":"MdxPost","slug":"/co-与异步的一些思考","title":"co 与异步的一些思考","date":"19.03.2020","excerpt":"JavaScript 的异步编程发展经过了四个阶段： 回调函数、发布订阅 Promise co 自执行的 Generator 函数 async / await 第三阶段现在基本不用了，但也起到了承上启下的作用 📝 co 源码 co 接收一个 generator…","timeToRead":2,"description":"通过对 co 源码的探索，进一步思考，得到异步解决方案的本质思路，一切竟然如此简单","tags":[{"name":"SourceCode","slug":"source-code"},{"name":"Thinking","slug":"thinking"},{"name":"Async","slug":"async"}]},{"__typename":"MdxPost","slug":"/koa-2-源码分析","title":"Koa2 源码分析","date":"12.03.2020","excerpt":"Koa 由 express 同一个团队打造，目的是代替 express 成为下一代 Node.js 后端框架，Koa 由于十分简洁，其实更适合做一些框架的基础（egg.js、think.js），如今看来并不能代替 express，express…","timeToRead":2,"description":"深入 Koa2 源码，探寻 Koa2 异步中间件机制","tags":[{"name":"SourceCode","slug":"source-code"}]},{"__typename":"MdxPost","slug":"/redux-源码分析","title":"Redux 源码分析","date":"07.12.2019","excerpt":"随着前端应用逐渐变大，状态也越来越复杂，需要一种状态管理的方案，Redux 就是其中一种 总结起来 React 状态管理方案就分为两类： 外部 Model，通过事件修改状态，组件通过监听订阅状态（通过 Context 连接 React） Redux Mobx EventBus…","timeToRead":1,"description":"深入 Redux 源码","tags":[{"name":"SourceCode","slug":"source-code"}]}]}},"pageContext":{"slug":"source-code","name":"SourceCode","formatString":"DD.MM.YYYY"}}}