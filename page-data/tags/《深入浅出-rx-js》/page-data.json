{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-tag-query-tsx","path":"/tags/《深入浅出-rx-js》","result":{"data":{"allPost":{"nodes":[{"__typename":"MdxPost","slug":"/读《深入浅出-rx-js》-rx-js-驱动-react","title":"读《深入浅出 RxJS》- RxJS 驱动 React","date":"22.02.2020","excerpt":"使用 Subject 类似 EventBus 实现数据交互 Rx 实现 Redux","timeToRead":1,"description":"《深入浅出 RxJS》读书笔记","tags":[{"name":"Note","slug":"note"},{"name":"《深入浅出 RxJS》","slug":"《深入浅出-rx-js》"}]},{"__typename":"MdxPost","slug":"/读《深入浅出-rx-js》-掌握时间的-scheduler","title":"读《深入浅出 RxJS》- 掌握时间的 Scheduler","date":"21.02.2020","excerpt":"数据结构：它知道如何根据优先级或其他条件存储和排队任务 执行环境：表示执行任务的位置和时间（例如同步、宏任务、微任务、下一动画帧） 虚拟时钟：通过 Scheduler 上的 now 提供“时间”的概念，在特定的任务将仅遵守该时钟指示的时间","timeToRead":1,"description":"《深入浅出 RxJS》读书笔记","tags":[{"name":"Note","slug":"note"},{"name":"《深入浅出 RxJS》","slug":"《深入浅出-rx-js》"}]},{"__typename":"MdxPost","slug":"/读《深入浅出-rx-js》-多播","title":"读《深入浅出 RxJS》- 多播","date":"20.02.2020","excerpt":"多播就是让一个数据流的内容被多个 Observer 订阅 Subject BehaviorSubject ReplaySubject AsyncSubject 数据流的多播 单播 多播 广播 广播会影响全局环境，筛选消息的责任在接收方，同时多个广播时容易混乱，所以 RxJS…","timeToRead":1,"description":"《深入浅出 RxJS》读书笔记","tags":[{"name":"Note","slug":"note"},{"name":"《深入浅出 RxJS》","slug":"《深入浅出-rx-js》"}]},{"__typename":"MdxPost","slug":"/读《深入浅出-rx-js》-异常错误处理","title":"读《深入浅出 RxJS》- 异常错误处理","date":"19.02.2020","excerpt":"异常处理的难点 虽然必要，但会让代码更加复杂 try / catch  只支持同步，因为 try / catch 是同步执行，执行后里面的异步代码还没有执行，就抓不到异步代码的错误 因此出现 callback，通过传递 cb…","timeToRead":1,"description":"《深入浅出 RxJS》读书笔记","tags":[{"name":"Note","slug":"note"},{"name":"《深入浅出 RxJS》","slug":"《深入浅出-rx-js》"}]},{"__typename":"MdxPost","slug":"/读《深入浅出-rx-js》-转化数据流","title":"读《深入浅出 RxJS》- 转化数据流","date":"18.02.2020","excerpt":"转化类操作符 对每个数据进行转化，映射 不转化单个数据，而是把数据重新组合，比如上游传下来 1、2、3 传给下游  1, 2, 3 ，无损回压控制 映射 map project 中的 this 指向 thisArg，相当于一个 context…","timeToRead":1,"description":"《深入浅出 RxJS》读书笔记","tags":[{"name":"Note","slug":"note"},{"name":"《深入浅出 RxJS》","slug":"《深入浅出-rx-js》"}]},{"__typename":"MdxPost","slug":"/读《深入浅出-rx-js》-过滤类数据流","title":"读《深入浅出 RxJS》- 过滤类数据流","date":"17.02.2020","excerpt":"过滤类操作符 filter first、last take 限定上游数据数量 takeLast takeLast 只有确定上游数据完结的时候才能产生数据，而且是一次性产生所有数据 takeWhile takeUntil Emits the values emitted by…","timeToRead":1,"description":"《深入浅出 RxJS》读书笔记","tags":[{"name":"Note","slug":"note"},{"name":"《深入浅出 RxJS》","slug":"《深入浅出-rx-js》"}]},{"__typename":"MdxPost","slug":"/读《深入浅出-rx-js》-辅助类数据流","title":"读《深入浅出 RxJS》- 辅助类数据流","date":"16.02.2020","excerpt":"数学类操作符 这些操作符必定会遍历上游 Observable 对象中吐出的所有数据才给下游传递数据，也就是说，它们只有在上游完结的时候，才给下游传递唯一数据 count 统计数据个数 max、min reduce 规约 条件布尔类操作符 every find、findIndex…","timeToRead":1,"description":"《深入浅出 RxJS》读书笔记","tags":[{"name":"Note","slug":"note"},{"name":"《深入浅出 RxJS》","slug":"《深入浅出-rx-js》"}]},{"__typename":"MdxPost","slug":"/读《深入浅出-rx-js》-合并数据流","title":"读《深入浅出 RxJS》- 合并数据流","date":"15.02.2020","excerpt":"合并类操作符 concat 首尾相连 concat 先从第一个 Observable 对象获取数据，第一个 Observable 就是调用 concat 的那个对象（类似  [1, 2].concat([3, 4]) ），第一个 complete 之后 concat…","timeToRead":1,"description":"《深入浅出 RxJS》读书笔记","tags":[{"name":"Note","slug":"note"},{"name":"《深入浅出 RxJS》","slug":"《深入浅出-rx-js》"}]},{"__typename":"MdxPost","slug":"/读《深入浅出-rx-js》-创建数据流","title":"读《深入浅出 RxJS》- 创建数据流","date":"14.02.2020","excerpt":"RxJS 提供的创建类操作符覆盖了几乎所有的数据流创建模式，没有必要重复发明轮子 创建同步操作流 产生哪些数据 数据之间先后顺序 create of 列举数据 of 产生 Cold Observable range 指定范围 range 只能每次递增 1，range(1.5,…","timeToRead":1,"description":"《深入浅出 RxJS》读书笔记","tags":[{"name":"Note","slug":"note"},{"name":"《深入浅出 RxJS》","slug":"《深入浅出-rx-js》"}]},{"__typename":"MdxPost","slug":"/读《深入浅出-rx-js》-操作符基础","title":"读《深入浅出 RxJS》- 操作符基础","date":"13.02.2020","excerpt":"操作符其实就是解决某个具体应用问题的模式。当我们要用 RxJS 解决问题时，首先需要创建 Observable…","timeToRead":1,"description":"《深入浅出 RxJS》读书笔记","tags":[{"name":"Note","slug":"note"},{"name":"《深入浅出 RxJS》","slug":"《深入浅出-rx-js》"}]},{"__typename":"MdxPost","slug":"/读《深入浅出-rx-js》-入门","title":"读《深入浅出 RxJS》- 入门","date":"12.02.2020","excerpt":"RxJS overview…","timeToRead":1,"description":"《深入浅出 RxJS》读书笔记","tags":[{"name":"Note","slug":"note"},{"name":"《深入浅出 RxJS》","slug":"《深入浅出-rx-js》"}]}]}},"pageContext":{"slug":"《深入浅出-rx-js》","name":"《深入浅出 RxJS》","formatString":"DD.MM.YYYY"}}}